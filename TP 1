# TP1 : Maîtrise réseau du poste


- [TP1 : Maîtrise réseau du poste](#tp1--maîtrise-réseau-du-poste)
- [I. Basics](#i-basics)
- [II. Go further](#ii-go-further)
- [III. Le requin](#iii-le-requin)

# I. Basics


☀️ **Carte réseau WiFi**

Déterminer...

- l'adresse MAC de votre carte WiFi
    ```
    ipconfig /all

    Adresse physique . . . . . . . . . . . : F4-7B-09-A6-81-0A
    ```
- l'adresse IP de votre carte WiFi
```
 Adresse IPv4. . . . . . . . . . . . . .: 10.33.76.205(préféré)
 ```
- le masque de sous-réseau du réseau LAN auquel vous êtes connectés en WiFi
```
Masque de sous-réseau. . . . . . . . . : 255.255.240.0
Notation CIDR        . . . . . . . . . : 10.33.76.205/20
```
 

---

☀️ **Déso pas déso**

Pas besoin d'un terminal là, juste une feuille, ou votre tête, ou un tool qui calcule tout hihi. Déterminer...

- l'adresse de réseau du LAN auquel vous êtes connectés en WiFi
```
10.33.76.0
```
- l'adresse de broadcast
- le nombre d'adresses IP disponibles dans ce réseau

---

☀️ **Hostname**

- déterminer le hostname de votre PC
```
C:\Users\Zahreddine Mehdi>hostname
LAPTOP-B0TVBCEU
```
---

☀️ **Passerelle du réseau**

Déterminer...

- l'adresse IP de la passerelle du réseau
```
   Passerelle par défaut. . . . . . . . . : 10.33.79.254
```
- l'adresse MAC de la passerelle du réseau
```
 Adresse physique . . . . . . . . . . . : F4-7B-09-A6-81-0A
```
---

☀️ **Serveur DHCP et DNS**

Déterminer...

- l'adresse IP du serveur DHCP qui vous a filé une IP
```
 Serveur DHCP . . . . . . . . . . . . . : 10.33.79.254
```
- l'adresse IP du serveur DNS que vous utilisez quand vous allez sur internet
```
 Serveurs DNS. . .  . . . . . . . . . . : 8.8.8.8
                                       1.1.1.1
```
---

☀️ **Table de routage**

Déterminer...

- dans votre table de routage, laquelle est la route par défaut
```
netstat -r
IPv4 Table de routage
===========================================================================
Itinéraires actifs :
Destination réseau    Masque réseau  Adr. passerelle   Adr. interface Métrique
          0.0.0.0          0.0.0.0     10.33.79.254     10.33.76.205     30
```

---

# II. Go further

> Toujours tout en ligne de commande.

---

☀️ **Hosts ?**

- faites en sorte que pour votre PC, le nom `b2.hello.vous` corresponde à l'IP `1.1.1.1`
- prouvez avec un `ping b2.hello.vous` que ça ping bien `1.1.1.1`
```
PS C:\Users\Zahreddine Mehdi> ping b2.hello.vous

Envoi d’une requête 'ping' sur b2.hello.vous [1.1.1.1] avec 32 octets de données :
Réponse de 1.1.1.1 : octets=32 temps=10 ms TTL=57
Réponse de 1.1.1.1 : octets=32 temps=12 ms TTL=57
Réponse de 1.1.1.1 : octets=32 temps=12 ms TTL=57
Réponse de 1.1.1.1 : octets=32 temps=11 ms TTL=57

Statistiques Ping pour 1.1.1.1:
    Paquets : envoyés = 4, reçus = 4, perdus = 0 (perte 0%),
Durée approximative des boucles en millisecondes :
    Minimum = 10ms, Maximum = 12ms, Moyenne = 11ms
```
> Vous pouvez éditer en GUI, et juste me montrer le contenu du fichier depuis le terminal pour le compte-rendu.

---

☀️ **Go mater une vidéo youtube et déterminer, pendant qu'elle tourne...**

- l'adresse IP du serveur auquel vous êtes connectés pour regarder la vidéo
```
Source ip : 91.68.245.78
```
- le port du serveur auquel vous êtes connectés
```
Port : 443
```
- le port que votre PC a ouvert en local pour se connecter au port du serveur distant
```
Port du PC : 62892
```


---

☀️ **Requêtes DNS**

Déterminer...

- à quelle adresse IP correspond le nom de domaine `www.ynov.com`
```
Destination Address: 104.26.10.233
```
> Ca s'appelle faire un "lookup DNS".

- à quel nom de domaine correspond l'IP `174.43.238.89`

> Ca s'appelle faire un "reverse lookup DNS".

---

☀️ **Hop hop hop**

Déterminer...

- par combien de machines vos paquets passent quand vous essayez de joindre `www.ynov.com`
```
PS C:\Users\Zahreddine Mehdi> tracert ynov.com

Détermination de l’itinéraire vers ynov.com [104.26.10.233]
avec un maximum de 30 sauts :

  1    12 ms     5 ms     2 ms  10.33.79.254
  2     5 ms     2 ms     2 ms  145.117.7.195.rev.sfr.net [195.7.117.145]
  3     7 ms     4 ms     7 ms  237.195.79.86.rev.sfr.net [86.79.195.237]
  4     7 ms     5 ms     4 ms  196.224.65.86.rev.sfr.net [86.65.224.196]
  5    20 ms    20 ms    21 ms  68.150.6.194.rev.sfr.net [194.6.150.68]
  6    20 ms    19 ms    21 ms  68.150.6.194.rev.sfr.net [194.6.150.68]
  7    27 ms    25 ms    25 ms  141.101.67.48
  8    23 ms    20 ms    20 ms  172.69.186.5
  9    20 ms    19 ms    22 ms  104.26.10.233

Itinéraire déterminé.
```
---

☀️ **IP publique**

Déterminer...

- l'adresse IP publique de la passerelle du réseau (le routeur d'YNOV donc si vous êtes dans les locaux d'YNOV quand vous faites le TP)
```
curl ifconfig.me
Content           : 195.7.117.146
```
---

☀️ **Scan réseau**

Déterminer...

- combien il y a de machines dans le LAN auquel vous êtes connectés
```
PS C:\Users\Zahreddine Mehdi> nmap -sP 10.33.79.254
Starting Nmap 7.94 ( https://nmap.org ) at 2023-11-20 11:10 Paris, Madrid
Nmap scan report for 10.33.79.254
Host is up (0.12s latency).
MAC Address: 7C:5A:1C:D3:D8:76 (Sophos)
Nmap done: 1 IP address (1 host up) scanned in 6.15 seconds

PS C:\Users\Zahreddine Mehdi> nmap -sP 10.33.79.254/20
Nmap done: 4096 IP addresses (686 hosts up) scanned in 160.06 seconds
```

# III. Le requin

Faites chauffer Wireshark. Pour chaque point, je veux que vous me livrez une capture Wireshark, format `.pcap` donc.

Faites *clean* 🧹, vous êtes des grands now :

- livrez moi des captures réseau avec uniquement ce que je demande et pas 40000 autres paquets autour
  - vous pouvez sélectionner seulement certains paquets quand vous enregistrez la capture dans Wireshark
- stockez les fichiers `.pcap` dans le dépôt git et côté rendu Markdown, vous me faites un lien vers le fichier, c'est cette syntaxe :

```markdown
[Lien vers capture ARP](./captures/arp.pcap)
```

---

☀️ **Capture ARP**

- 📁 fichier `arp.pcap`
- capturez un échange ARP entre votre PC et la passerelle du réseau

[capture échange ARP](./capture-arp.pcap) : utilisation d'un filtre Wireshark

> Si vous utilisez un filtre Wireshark pour mieux voir ce trafic, précisez-le moi dans le compte-rendu.

---

☀️ **Capture DNS**


- capturez une requête DNS vers le domaine de votre choix et la réponse
- vous effectuerez la requête DNS en ligne de commande
[capture requête]

[capture requête DNS](./capture-dns.pcap) : utilisation d'un filtre Wire shark

> Si vous utilisez un filtre Wireshark pour mieux voir ce trafic, précisez-le moi dans le compte-rendu.

---

☀️ **Capture TCP**

- 📁 fichier `tcp.pcap`
- effectuez une connexion qui sollicite le protocole TCP
- je veux voir dans la capture :
  - un 3-way handshake
  - un peu de trafic
  - la fin de la connexion TCP

> Si vous utilisez un filtre Wireshark pour mieux voir ce trafic, précisez-le moi dans le compte-rendu.

---

![Packet sniffer](img/wireshark.jpg)

> *Je sais que je vous l'ai déjà servi l'an dernier lui, mais j'aime trop ce meme hihi 🐈*